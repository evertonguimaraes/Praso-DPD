<pattern name="Observer Pattern">
	<entity id="e1" name="Observer" type="Interface" optional="false" />
	<entity id="e2" name="Concrete Observer" type="Class" hasDependency="Implement" optional="false" />
	<entity id="e3" name="Subject" type="Class" hasDependency="Typed,Use" optional="false" />

	<rule rule-type="Dependency"  source="e2" value="Implement" target="e1" optional="false" />
	<rule rule-type="Dependency"  source="e3" value="Typed" target="e1" />
	<rule rule-type="Dependency"  source="e3" value="Use" target="e1" />
	<rule rule-type="Cardinality"  source="e2" value="Plural" />
	<rule rule-type="Dependency"  exclude="true" source="e3" value="Typed" target="e2" />
	<rule rule-type="Dependency"  exclude="true" source="e3" value="Use" target="e2" />

	<resolver resolver-type="SEPARATE" source="e1" />

	<code-snippet id="c1" name="For Loop" type="ForEachStmt" source="e3" value="VariableType" target="e1" />
	<code-snippet id="c2" name="Observer List" type="TypeAggregation" source="e3" value="VariableType" target="e1" />

</pattern>